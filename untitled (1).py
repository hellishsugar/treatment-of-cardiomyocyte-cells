# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16o3itmzVVAyayhcbv23PyPrWIQt9tlfA
"""

import cv2
import numpy as np
import os
from matplotlib import pyplot as plt

def process_image(image_path):
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    if image is None:
        print("Image not found or wrong path:", image_path)
        return

    # Применение фильтра Гаусса для сглаживания
    blurred = cv2.GaussianBlur(image, (5, 5), 0)

    # Автоматическое определение порога с помощью метода Оцу
    _, thresholded = cv2.threshold(blurred, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

    # Применение морфологических операций для улучшения результатов сегментации
    kernel = np.ones((3,3), np.uint8)
    closed = cv2.morphologyEx(thresholded, cv2.MORPH_CLOSE, kernel, iterations=2)

    # Нахождение контуров
    contours, _ = cv2.findContours(closed, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    # Отрисовка контуров на оригинальном изображении
    result_image = cv2.cvtColor(image, cv2.COLOR_GRAY2BGR)
    cv2.drawContours(result_image, contours, -1, (0, 255, 0), 2)

    # Отображение результатов
    plt.figure(figsize=(10, 10))
    plt.subplot(121), plt.imshow(image, cmap='gray'), plt.title('Original')
    plt.subplot(122), plt.imshow(result_image), plt.title('Contours')
    plt.show()

def main():
    directory = "/content/cells"
    for filename in os.listdir(directory):
        if filename.lower().endswith(".jpg") or filename.lower().endswith(".png"):
            process_image(os.path.join(directory, filename))

if __name__ == '__main__':
    main()